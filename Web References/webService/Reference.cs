//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace DPM_Api_VBETA.webService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="DynmixProcessMangWS_Binding", Namespace="urn:microsoft-dynamics-schemas/codeunit/DynmixProcessMangWS")]
    public partial class DynmixProcessMangWS : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ListeConsultantOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListeClientOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteConsultantOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddConsultantOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectConsuOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateConsuOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetConsultantOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCvOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddPresOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListeConsultantPresenceOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddCongeOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListeCongeOperationCompleted;
        
        private System.Threading.SendOrPostCallback RepCongOperationCompleted;
        
        private System.Threading.SendOrPostCallback MescongesOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddAutoOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddNoteFraisOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListeNoteOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddPresDOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public DynmixProcessMangWS() {
            this.Url = global::DPM_Api_VBETA.Properties.Settings.Default.DPM_Api_VBETA_webService_DynmixProcessMangWS;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ListeConsultantCompletedEventHandler ListeConsultantCompleted;
        
        /// <remarks/>
        public event ListeClientCompletedEventHandler ListeClientCompleted;
        
        /// <remarks/>
        public event DeleteConsultantCompletedEventHandler DeleteConsultantCompleted;
        
        /// <remarks/>
        public event AddConsultantCompletedEventHandler AddConsultantCompleted;
        
        /// <remarks/>
        public event SelectConsuCompletedEventHandler SelectConsuCompleted;
        
        /// <remarks/>
        public event UpdateConsuCompletedEventHandler UpdateConsuCompleted;
        
        /// <remarks/>
        public event GetConsultantCompletedEventHandler GetConsultantCompleted;
        
        /// <remarks/>
        public event UpdateCvCompletedEventHandler UpdateCvCompleted;
        
        /// <remarks/>
        public event AddPresCompletedEventHandler AddPresCompleted;
        
        /// <remarks/>
        public event ListeConsultantPresenceCompletedEventHandler ListeConsultantPresenceCompleted;
        
        /// <remarks/>
        public event AddCongeCompletedEventHandler AddCongeCompleted;
        
        /// <remarks/>
        public event ListeCongeCompletedEventHandler ListeCongeCompleted;
        
        /// <remarks/>
        public event RepCongCompletedEventHandler RepCongCompleted;
        
        /// <remarks/>
        public event MescongesCompletedEventHandler MescongesCompleted;
        
        /// <remarks/>
        public event AddAutoCompletedEventHandler AddAutoCompleted;
        
        /// <remarks/>
        public event AddNoteFraisCompletedEventHandler AddNoteFraisCompleted;
        
        /// <remarks/>
        public event ListeNoteCompletedEventHandler ListeNoteCompleted;
        
        /// <remarks/>
        public event AddPresDCompletedEventHandler AddPresDCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/DynmixProcessMangWS:ListeConsultant", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/DynmixProcessMangWS", ResponseElementName="ListeConsultant_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/DynmixProcessMangWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ListeConsultant(ref RootCons consultant) {
            object[] results = this.Invoke("ListeConsultant", new object[] {
                        consultant});
            consultant = ((RootCons)(results[0]));
        }
        
        /// <remarks/>
        public void ListeConsultantAsync(RootCons consultant) {
            this.ListeConsultantAsync(consultant, null);
        }
        
        /// <remarks/>
        public void ListeConsultantAsync(RootCons consultant, object userState) {
            if ((this.ListeConsultantOperationCompleted == null)) {
                this.ListeConsultantOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListeConsultantOperationCompleted);
            }
            this.InvokeAsync("ListeConsultant", new object[] {
                        consultant}, this.ListeConsultantOperationCompleted, userState);
        }
        
        private void OnListeConsultantOperationCompleted(object arg) {
            if ((this.ListeConsultantCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListeConsultantCompleted(this, new ListeConsultantCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/DynmixProcessMangWS:ListeClient", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/DynmixProcessMangWS", ResponseElementName="ListeClient_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/DynmixProcessMangWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ListeClient(ref Root xmlportCust) {
            object[] results = this.Invoke("ListeClient", new object[] {
                        xmlportCust});
            xmlportCust = ((Root)(results[0]));
        }
        
        /// <remarks/>
        public void ListeClientAsync(Root xmlportCust) {
            this.ListeClientAsync(xmlportCust, null);
        }
        
        /// <remarks/>
        public void ListeClientAsync(Root xmlportCust, object userState) {
            if ((this.ListeClientOperationCompleted == null)) {
                this.ListeClientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListeClientOperationCompleted);
            }
            this.InvokeAsync("ListeClient", new object[] {
                        xmlportCust}, this.ListeClientOperationCompleted, userState);
        }
        
        private void OnListeClientOperationCompleted(object arg) {
            if ((this.ListeClientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListeClientCompleted(this, new ListeClientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/DynmixProcessMangWS:DeleteConsultant", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/DynmixProcessMangWS", ResponseElementName="DeleteConsultant_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/DynmixProcessMangWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool DeleteConsultant(ref int id) {
            object[] results = this.Invoke("DeleteConsultant", new object[] {
                        id});
            id = ((int)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteConsultantAsync(int id) {
            this.DeleteConsultantAsync(id, null);
        }
        
        /// <remarks/>
        public void DeleteConsultantAsync(int id, object userState) {
            if ((this.DeleteConsultantOperationCompleted == null)) {
                this.DeleteConsultantOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteConsultantOperationCompleted);
            }
            this.InvokeAsync("DeleteConsultant", new object[] {
                        id}, this.DeleteConsultantOperationCompleted, userState);
        }
        
        private void OnDeleteConsultantOperationCompleted(object arg) {
            if ((this.DeleteConsultantCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteConsultantCompleted(this, new DeleteConsultantCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/DynmixProcessMangWS:AddConsultant", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/DynmixProcessMangWS", ResponseElementName="AddConsultant_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/DynmixProcessMangWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool AddConsultant(string cin, string nom, string prenom, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime date_nais, string email, string role, string tele, string tele_urg, string titre, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime date_deb) {
            object[] results = this.Invoke("AddConsultant", new object[] {
                        cin,
                        nom,
                        prenom,
                        date_nais,
                        email,
                        role,
                        tele,
                        tele_urg,
                        titre,
                        date_deb});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddConsultantAsync(string cin, string nom, string prenom, System.DateTime date_nais, string email, string role, string tele, string tele_urg, string titre, System.DateTime date_deb) {
            this.AddConsultantAsync(cin, nom, prenom, date_nais, email, role, tele, tele_urg, titre, date_deb, null);
        }
        
        /// <remarks/>
        public void AddConsultantAsync(string cin, string nom, string prenom, System.DateTime date_nais, string email, string role, string tele, string tele_urg, string titre, System.DateTime date_deb, object userState) {
            if ((this.AddConsultantOperationCompleted == null)) {
                this.AddConsultantOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddConsultantOperationCompleted);
            }
            this.InvokeAsync("AddConsultant", new object[] {
                        cin,
                        nom,
                        prenom,
                        date_nais,
                        email,
                        role,
                        tele,
                        tele_urg,
                        titre,
                        date_deb}, this.AddConsultantOperationCompleted, userState);
        }
        
        private void OnAddConsultantOperationCompleted(object arg) {
            if ((this.AddConsultantCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddConsultantCompleted(this, new AddConsultantCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/DynmixProcessMangWS:SelectConsu", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/DynmixProcessMangWS", ResponseElementName="SelectConsu_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/DynmixProcessMangWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SelectConsu(ref RootCons xmlConsult, int id) {
            object[] results = this.Invoke("SelectConsu", new object[] {
                        xmlConsult,
                        id});
            xmlConsult = ((RootCons)(results[0]));
        }
        
        /// <remarks/>
        public void SelectConsuAsync(RootCons xmlConsult, int id) {
            this.SelectConsuAsync(xmlConsult, id, null);
        }
        
        /// <remarks/>
        public void SelectConsuAsync(RootCons xmlConsult, int id, object userState) {
            if ((this.SelectConsuOperationCompleted == null)) {
                this.SelectConsuOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectConsuOperationCompleted);
            }
            this.InvokeAsync("SelectConsu", new object[] {
                        xmlConsult,
                        id}, this.SelectConsuOperationCompleted, userState);
        }
        
        private void OnSelectConsuOperationCompleted(object arg) {
            if ((this.SelectConsuCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectConsuCompleted(this, new SelectConsuCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/DynmixProcessMangWS:UpdateConsu", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/DynmixProcessMangWS", ResponseElementName="UpdateConsu_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/DynmixProcessMangWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool UpdateConsu(int idConsu, string nom, string prenom, string telephone, string telurg, string role, string titre) {
            object[] results = this.Invoke("UpdateConsu", new object[] {
                        idConsu,
                        nom,
                        prenom,
                        telephone,
                        telurg,
                        role,
                        titre});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateConsuAsync(int idConsu, string nom, string prenom, string telephone, string telurg, string role, string titre) {
            this.UpdateConsuAsync(idConsu, nom, prenom, telephone, telurg, role, titre, null);
        }
        
        /// <remarks/>
        public void UpdateConsuAsync(int idConsu, string nom, string prenom, string telephone, string telurg, string role, string titre, object userState) {
            if ((this.UpdateConsuOperationCompleted == null)) {
                this.UpdateConsuOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateConsuOperationCompleted);
            }
            this.InvokeAsync("UpdateConsu", new object[] {
                        idConsu,
                        nom,
                        prenom,
                        telephone,
                        telurg,
                        role,
                        titre}, this.UpdateConsuOperationCompleted, userState);
        }
        
        private void OnUpdateConsuOperationCompleted(object arg) {
            if ((this.UpdateConsuCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateConsuCompleted(this, new UpdateConsuCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/DynmixProcessMangWS:GetConsultant", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/DynmixProcessMangWS", ResponseElementName="GetConsultant_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/DynmixProcessMangWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetConsultant(ref RootCons consultant, string mail) {
            object[] results = this.Invoke("GetConsultant", new object[] {
                        consultant,
                        mail});
            consultant = ((RootCons)(results[0]));
        }
        
        /// <remarks/>
        public void GetConsultantAsync(RootCons consultant, string mail) {
            this.GetConsultantAsync(consultant, mail, null);
        }
        
        /// <remarks/>
        public void GetConsultantAsync(RootCons consultant, string mail, object userState) {
            if ((this.GetConsultantOperationCompleted == null)) {
                this.GetConsultantOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetConsultantOperationCompleted);
            }
            this.InvokeAsync("GetConsultant", new object[] {
                        consultant,
                        mail}, this.GetConsultantOperationCompleted, userState);
        }
        
        private void OnGetConsultantOperationCompleted(object arg) {
            if ((this.GetConsultantCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetConsultantCompleted(this, new GetConsultantCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/DynmixProcessMangWS:UpdateCv", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/DynmixProcessMangWS", ResponseElementName="UpdateCv_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/DynmixProcessMangWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool UpdateCv(int idCon, string path) {
            object[] results = this.Invoke("UpdateCv", new object[] {
                        idCon,
                        path});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateCvAsync(int idCon, string path) {
            this.UpdateCvAsync(idCon, path, null);
        }
        
        /// <remarks/>
        public void UpdateCvAsync(int idCon, string path, object userState) {
            if ((this.UpdateCvOperationCompleted == null)) {
                this.UpdateCvOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCvOperationCompleted);
            }
            this.InvokeAsync("UpdateCv", new object[] {
                        idCon,
                        path}, this.UpdateCvOperationCompleted, userState);
        }
        
        private void OnUpdateCvOperationCompleted(object arg) {
            if ((this.UpdateCvCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCvCompleted(this, new UpdateCvCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/DynmixProcessMangWS:AddPres", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/DynmixProcessMangWS", ResponseElementName="AddPres_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/DynmixProcessMangWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool AddPres(string cin, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime date, string status) {
            object[] results = this.Invoke("AddPres", new object[] {
                        cin,
                        date,
                        status});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddPresAsync(string cin, System.DateTime date, string status) {
            this.AddPresAsync(cin, date, status, null);
        }
        
        /// <remarks/>
        public void AddPresAsync(string cin, System.DateTime date, string status, object userState) {
            if ((this.AddPresOperationCompleted == null)) {
                this.AddPresOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddPresOperationCompleted);
            }
            this.InvokeAsync("AddPres", new object[] {
                        cin,
                        date,
                        status}, this.AddPresOperationCompleted, userState);
        }
        
        private void OnAddPresOperationCompleted(object arg) {
            if ((this.AddPresCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddPresCompleted(this, new AddPresCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/DynmixProcessMangWS:ListeConsultantPresen" +
            "ce", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/DynmixProcessMangWS", ResponseElementName="ListeConsultantPresence_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/DynmixProcessMangWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ListeConsultantPresence(ref RootCons consultant) {
            object[] results = this.Invoke("ListeConsultantPresence", new object[] {
                        consultant});
            consultant = ((RootCons)(results[0]));
        }
        
        /// <remarks/>
        public void ListeConsultantPresenceAsync(RootCons consultant) {
            this.ListeConsultantPresenceAsync(consultant, null);
        }
        
        /// <remarks/>
        public void ListeConsultantPresenceAsync(RootCons consultant, object userState) {
            if ((this.ListeConsultantPresenceOperationCompleted == null)) {
                this.ListeConsultantPresenceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListeConsultantPresenceOperationCompleted);
            }
            this.InvokeAsync("ListeConsultantPresence", new object[] {
                        consultant}, this.ListeConsultantPresenceOperationCompleted, userState);
        }
        
        private void OnListeConsultantPresenceOperationCompleted(object arg) {
            if ((this.ListeConsultantPresenceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListeConsultantPresenceCompleted(this, new ListeConsultantPresenceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/DynmixProcessMangWS:AddConge", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/DynmixProcessMangWS", ResponseElementName="AddConge_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/DynmixProcessMangWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool AddConge(string nomPrenom, string motif, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime datedeb, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime datefin, int nbjours, string type, string status, string cin) {
            object[] results = this.Invoke("AddConge", new object[] {
                        nomPrenom,
                        motif,
                        datedeb,
                        datefin,
                        nbjours,
                        type,
                        status,
                        cin});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddCongeAsync(string nomPrenom, string motif, System.DateTime datedeb, System.DateTime datefin, int nbjours, string type, string status, string cin) {
            this.AddCongeAsync(nomPrenom, motif, datedeb, datefin, nbjours, type, status, cin, null);
        }
        
        /// <remarks/>
        public void AddCongeAsync(string nomPrenom, string motif, System.DateTime datedeb, System.DateTime datefin, int nbjours, string type, string status, string cin, object userState) {
            if ((this.AddCongeOperationCompleted == null)) {
                this.AddCongeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddCongeOperationCompleted);
            }
            this.InvokeAsync("AddConge", new object[] {
                        nomPrenom,
                        motif,
                        datedeb,
                        datefin,
                        nbjours,
                        type,
                        status,
                        cin}, this.AddCongeOperationCompleted, userState);
        }
        
        private void OnAddCongeOperationCompleted(object arg) {
            if ((this.AddCongeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddCongeCompleted(this, new AddCongeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/DynmixProcessMangWS:ListeConge", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/DynmixProcessMangWS", ResponseElementName="ListeConge_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/DynmixProcessMangWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ListeConge(ref RootCong conge) {
            object[] results = this.Invoke("ListeConge", new object[] {
                        conge});
            conge = ((RootCong)(results[0]));
        }
        
        /// <remarks/>
        public void ListeCongeAsync(RootCong conge) {
            this.ListeCongeAsync(conge, null);
        }
        
        /// <remarks/>
        public void ListeCongeAsync(RootCong conge, object userState) {
            if ((this.ListeCongeOperationCompleted == null)) {
                this.ListeCongeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListeCongeOperationCompleted);
            }
            this.InvokeAsync("ListeConge", new object[] {
                        conge}, this.ListeCongeOperationCompleted, userState);
        }
        
        private void OnListeCongeOperationCompleted(object arg) {
            if ((this.ListeCongeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListeCongeCompleted(this, new ListeCongeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/DynmixProcessMangWS:RepCong", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/DynmixProcessMangWS", ResponseElementName="RepCong_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/DynmixProcessMangWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool RepCong(int id, string status) {
            object[] results = this.Invoke("RepCong", new object[] {
                        id,
                        status});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void RepCongAsync(int id, string status) {
            this.RepCongAsync(id, status, null);
        }
        
        /// <remarks/>
        public void RepCongAsync(int id, string status, object userState) {
            if ((this.RepCongOperationCompleted == null)) {
                this.RepCongOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRepCongOperationCompleted);
            }
            this.InvokeAsync("RepCong", new object[] {
                        id,
                        status}, this.RepCongOperationCompleted, userState);
        }
        
        private void OnRepCongOperationCompleted(object arg) {
            if ((this.RepCongCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RepCongCompleted(this, new RepCongCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/DynmixProcessMangWS:Mesconges", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/DynmixProcessMangWS", ResponseElementName="Mesconges_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/DynmixProcessMangWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Mesconges(ref RootCong conge, string cin) {
            object[] results = this.Invoke("Mesconges", new object[] {
                        conge,
                        cin});
            conge = ((RootCong)(results[0]));
        }
        
        /// <remarks/>
        public void MescongesAsync(RootCong conge, string cin) {
            this.MescongesAsync(conge, cin, null);
        }
        
        /// <remarks/>
        public void MescongesAsync(RootCong conge, string cin, object userState) {
            if ((this.MescongesOperationCompleted == null)) {
                this.MescongesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMescongesOperationCompleted);
            }
            this.InvokeAsync("Mesconges", new object[] {
                        conge,
                        cin}, this.MescongesOperationCompleted, userState);
        }
        
        private void OnMescongesOperationCompleted(object arg) {
            if ((this.MescongesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MescongesCompleted(this, new MescongesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/DynmixProcessMangWS:AddAuto", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/DynmixProcessMangWS", ResponseElementName="AddAuto_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/DynmixProcessMangWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool AddAuto(string cin, string nom, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime date, string heuredu, string heureau, string type, string status) {
            object[] results = this.Invoke("AddAuto", new object[] {
                        cin,
                        nom,
                        date,
                        heuredu,
                        heureau,
                        type,
                        status});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddAutoAsync(string cin, string nom, System.DateTime date, string heuredu, string heureau, string type, string status) {
            this.AddAutoAsync(cin, nom, date, heuredu, heureau, type, status, null);
        }
        
        /// <remarks/>
        public void AddAutoAsync(string cin, string nom, System.DateTime date, string heuredu, string heureau, string type, string status, object userState) {
            if ((this.AddAutoOperationCompleted == null)) {
                this.AddAutoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddAutoOperationCompleted);
            }
            this.InvokeAsync("AddAuto", new object[] {
                        cin,
                        nom,
                        date,
                        heuredu,
                        heureau,
                        type,
                        status}, this.AddAutoOperationCompleted, userState);
        }
        
        private void OnAddAutoOperationCompleted(object arg) {
            if ((this.AddAutoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddAutoCompleted(this, new AddAutoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/DynmixProcessMangWS:AddNoteFrais", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/DynmixProcessMangWS", ResponseElementName="AddNoteFrais_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/DynmixProcessMangWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool AddNoteFrais(string consultant, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime date, string motif, decimal montant, int mois) {
            object[] results = this.Invoke("AddNoteFrais", new object[] {
                        consultant,
                        date,
                        motif,
                        montant,
                        mois});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddNoteFraisAsync(string consultant, System.DateTime date, string motif, decimal montant, int mois) {
            this.AddNoteFraisAsync(consultant, date, motif, montant, mois, null);
        }
        
        /// <remarks/>
        public void AddNoteFraisAsync(string consultant, System.DateTime date, string motif, decimal montant, int mois, object userState) {
            if ((this.AddNoteFraisOperationCompleted == null)) {
                this.AddNoteFraisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddNoteFraisOperationCompleted);
            }
            this.InvokeAsync("AddNoteFrais", new object[] {
                        consultant,
                        date,
                        motif,
                        montant,
                        mois}, this.AddNoteFraisOperationCompleted, userState);
        }
        
        private void OnAddNoteFraisOperationCompleted(object arg) {
            if ((this.AddNoteFraisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddNoteFraisCompleted(this, new AddNoteFraisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/DynmixProcessMangWS:ListeNote", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/DynmixProcessMangWS", ResponseElementName="ListeNote_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/DynmixProcessMangWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ListeNote(ref RootNote noteFr, int mois) {
            object[] results = this.Invoke("ListeNote", new object[] {
                        noteFr,
                        mois});
            noteFr = ((RootNote)(results[0]));
        }
        
        /// <remarks/>
        public void ListeNoteAsync(RootNote noteFr, int mois) {
            this.ListeNoteAsync(noteFr, mois, null);
        }
        
        /// <remarks/>
        public void ListeNoteAsync(RootNote noteFr, int mois, object userState) {
            if ((this.ListeNoteOperationCompleted == null)) {
                this.ListeNoteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListeNoteOperationCompleted);
            }
            this.InvokeAsync("ListeNote", new object[] {
                        noteFr,
                        mois}, this.ListeNoteOperationCompleted, userState);
        }
        
        private void OnListeNoteOperationCompleted(object arg) {
            if ((this.ListeNoteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListeNoteCompleted(this, new ListeNoteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/DynmixProcessMangWS:AddPresD", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/DynmixProcessMangWS", ResponseElementName="AddPresD_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/DynmixProcessMangWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool AddPresD(string cin, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime date) {
            object[] results = this.Invoke("AddPresD", new object[] {
                        cin,
                        date});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddPresDAsync(string cin, System.DateTime date) {
            this.AddPresDAsync(cin, date, null);
        }
        
        /// <remarks/>
        public void AddPresDAsync(string cin, System.DateTime date, object userState) {
            if ((this.AddPresDOperationCompleted == null)) {
                this.AddPresDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddPresDOperationCompleted);
            }
            this.InvokeAsync("AddPresD", new object[] {
                        cin,
                        date}, this.AddPresDOperationCompleted, userState);
        }
        
        private void OnAddPresDOperationCompleted(object arg) {
            if ((this.AddPresDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddPresDCompleted(this, new AddPresDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/x50004")]
    public partial class RootCons {
        
        private RecCons[] recConsField;
        
        private string[] textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("RecCons")]
        public RecCons[] RecCons {
            get {
                return this.recConsField;
            }
            set {
                this.recConsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/x50004")]
    public partial class RecCons {
        
        private string cinField;
        
        private string nomField;
        
        private string prenomField;
        
        private string roleField;
        
        private int idField;
        
        private string emailField;
        
        private string roleField1;
        
        private string datenaisField;
        
        private string telephoneField;
        
        private string telephoneurgField;
        
        private string titreField;
        
        private string datedebField;
        
        private string imageField;
        
        private string cur_vitField;
        
        private string presenceField;
        
        private string derdatField;
        
        public RecCons() {
            this.idField = 0;
        }
        
        /// <remarks/>
        public string cin {
            get {
                return this.cinField;
            }
            set {
                this.cinField = value;
            }
        }
        
        /// <remarks/>
        public string nom {
            get {
                return this.nomField;
            }
            set {
                this.nomField = value;
            }
        }
        
        /// <remarks/>
        public string prenom {
            get {
                return this.prenomField;
            }
            set {
                this.prenomField = value;
            }
        }
        
        /// <remarks/>
        public string Role {
            get {
                return this.roleField;
            }
            set {
                this.roleField = value;
            }
        }
        
        /// <remarks/>
        public int id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string role {
            get {
                return this.roleField1;
            }
            set {
                this.roleField1 = value;
            }
        }
        
        /// <remarks/>
        public string datenais {
            get {
                return this.datenaisField;
            }
            set {
                this.datenaisField = value;
            }
        }
        
        /// <remarks/>
        public string telephone {
            get {
                return this.telephoneField;
            }
            set {
                this.telephoneField = value;
            }
        }
        
        /// <remarks/>
        public string telephoneurg {
            get {
                return this.telephoneurgField;
            }
            set {
                this.telephoneurgField = value;
            }
        }
        
        /// <remarks/>
        public string titre {
            get {
                return this.titreField;
            }
            set {
                this.titreField = value;
            }
        }
        
        /// <remarks/>
        public string datedeb {
            get {
                return this.datedebField;
            }
            set {
                this.datedebField = value;
            }
        }
        
        /// <remarks/>
        public string image {
            get {
                return this.imageField;
            }
            set {
                this.imageField = value;
            }
        }
        
        /// <remarks/>
        public string cur_vit {
            get {
                return this.cur_vitField;
            }
            set {
                this.cur_vitField = value;
            }
        }
        
        /// <remarks/>
        public string presence {
            get {
                return this.presenceField;
            }
            set {
                this.presenceField = value;
            }
        }
        
        /// <remarks/>
        public string derdat {
            get {
                return this.derdatField;
            }
            set {
                this.derdatField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/x50006")]
    public partial class RecNoteFrais {
        
        private int idField;
        
        private string consultantField;
        
        private string dateField;
        
        private string motifField;
        
        private string montantField;
        
        private int moisField;
        
        public RecNoteFrais() {
            this.idField = 0;
            this.moisField = 0;
        }
        
        /// <remarks/>
        public int id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string consultant {
            get {
                return this.consultantField;
            }
            set {
                this.consultantField = value;
            }
        }
        
        /// <remarks/>
        public string date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
            }
        }
        
        /// <remarks/>
        public string motif {
            get {
                return this.motifField;
            }
            set {
                this.motifField = value;
            }
        }
        
        /// <remarks/>
        public string montant {
            get {
                return this.montantField;
            }
            set {
                this.montantField = value;
            }
        }
        
        /// <remarks/>
        public int mois {
            get {
                return this.moisField;
            }
            set {
                this.moisField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/x50006")]
    public partial class RootNote {
        
        private RecNoteFrais[] recNoteFraisField;
        
        private string[] textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("RecNoteFrais")]
        public RecNoteFrais[] RecNoteFrais {
            get {
                return this.recNoteFraisField;
            }
            set {
                this.recNoteFraisField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/x50005")]
    public partial class RecCong {
        
        private int idField;
        
        private string nomField;
        
        private string motifField;
        
        private string datedebField;
        
        private string datefinField;
        
        private int nbjourField;
        
        private string typeField;
        
        private string statusField;
        
        private string heuredebField;
        
        private string heurefinField;
        
        private string cinField;
        
        public RecCong() {
            this.idField = 0;
            this.nbjourField = 0;
        }
        
        /// <remarks/>
        public int id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string nom {
            get {
                return this.nomField;
            }
            set {
                this.nomField = value;
            }
        }
        
        /// <remarks/>
        public string motif {
            get {
                return this.motifField;
            }
            set {
                this.motifField = value;
            }
        }
        
        /// <remarks/>
        public string datedeb {
            get {
                return this.datedebField;
            }
            set {
                this.datedebField = value;
            }
        }
        
        /// <remarks/>
        public string datefin {
            get {
                return this.datefinField;
            }
            set {
                this.datefinField = value;
            }
        }
        
        /// <remarks/>
        public int nbjour {
            get {
                return this.nbjourField;
            }
            set {
                this.nbjourField = value;
            }
        }
        
        /// <remarks/>
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string heuredeb {
            get {
                return this.heuredebField;
            }
            set {
                this.heuredebField = value;
            }
        }
        
        /// <remarks/>
        public string heurefin {
            get {
                return this.heurefinField;
            }
            set {
                this.heurefinField = value;
            }
        }
        
        /// <remarks/>
        public string cin {
            get {
                return this.cinField;
            }
            set {
                this.cinField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/x50005")]
    public partial class RootCong {
        
        private RecCong[] recCongField;
        
        private string[] textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("RecCong")]
        public RecCong[] RecCong {
            get {
                return this.recCongField;
            }
            set {
                this.recCongField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/x50000")]
    public partial class RecG18 {
        
        private string noField;
        
        private string nameField;
        
        private string adresseField;
        
        private string phoneField;
        
        private string lastDateModField;
        
        /// <remarks/>
        public string No {
            get {
                return this.noField;
            }
            set {
                this.noField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Adresse {
            get {
                return this.adresseField;
            }
            set {
                this.adresseField = value;
            }
        }
        
        /// <remarks/>
        public string Phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        public string LastDateMod {
            get {
                return this.lastDateModField;
            }
            set {
                this.lastDateModField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/x50000")]
    public partial class Root {
        
        private RecG18[] recG18Field;
        
        private string[] textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("RecG18")]
        public RecG18[] RecG18 {
            get {
                return this.recG18Field;
            }
            set {
                this.recG18Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ListeConsultantCompletedEventHandler(object sender, ListeConsultantCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListeConsultantCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListeConsultantCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RootCons consultant {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RootCons)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ListeClientCompletedEventHandler(object sender, ListeClientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListeClientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListeClientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Root xmlportCust {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Root)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteConsultantCompletedEventHandler(object sender, DeleteConsultantCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteConsultantCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteConsultantCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int id {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddConsultantCompletedEventHandler(object sender, AddConsultantCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddConsultantCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddConsultantCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SelectConsuCompletedEventHandler(object sender, SelectConsuCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectConsuCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectConsuCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RootCons xmlConsult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RootCons)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateConsuCompletedEventHandler(object sender, UpdateConsuCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateConsuCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateConsuCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetConsultantCompletedEventHandler(object sender, GetConsultantCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetConsultantCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetConsultantCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RootCons consultant {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RootCons)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateCvCompletedEventHandler(object sender, UpdateCvCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCvCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCvCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddPresCompletedEventHandler(object sender, AddPresCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddPresCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddPresCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ListeConsultantPresenceCompletedEventHandler(object sender, ListeConsultantPresenceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListeConsultantPresenceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListeConsultantPresenceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RootCons consultant {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RootCons)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddCongeCompletedEventHandler(object sender, AddCongeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddCongeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddCongeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ListeCongeCompletedEventHandler(object sender, ListeCongeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListeCongeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListeCongeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RootCong conge {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RootCong)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void RepCongCompletedEventHandler(object sender, RepCongCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RepCongCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RepCongCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void MescongesCompletedEventHandler(object sender, MescongesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MescongesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MescongesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RootCong conge {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RootCong)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddAutoCompletedEventHandler(object sender, AddAutoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddAutoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddAutoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddNoteFraisCompletedEventHandler(object sender, AddNoteFraisCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddNoteFraisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddNoteFraisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ListeNoteCompletedEventHandler(object sender, ListeNoteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListeNoteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListeNoteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RootNote noteFr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RootNote)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddPresDCompletedEventHandler(object sender, AddPresDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddPresDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddPresDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591